{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALOK\\\\OneDrive\\\\Desktop\\\\AI parking detctor\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [parkingSpots, setParkingSpots] = useState([]);\n  useEffect(() => {\n    const fetchSpots = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/spots');\n        setParkingSpots(res.data);\n      } catch (err) {\n        console.error('Error fetching parking spots:', err);\n      }\n    };\n    fetchSpots();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '90vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [28.6448, 77.216721],\n      zoom: 13,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 OpenStreetMap contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), parkingSpots.map(spot => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [spot.latitude, spot.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [spot.name, \" - \", spot.city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), \"Slots: \", spot.availableSlots, \"/\", spot.totalSlots]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, spot._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"PqS1yne7J/c4pY5LClLAQVbn8p8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","axios","jsxDEV","_jsxDEV","Dashboard","_s","parkingSpots","setParkingSpots","fetchSpots","res","get","data","err","console","error","style","height","width","children","center","zoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","map","spot","position","latitude","longitude","name","city","availableSlots","totalSlots","_id","_c","$RefreshReg$"],"sources":["C:/Users/ALOK/OneDrive/Desktop/AI parking detctor/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport axios from 'axios';\r\n\r\nfunction Dashboard() {\r\n  const [parkingSpots, setParkingSpots] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSpots = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/spots');\r\n        setParkingSpots(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching parking spots:', err);\r\n      }\r\n    };\r\n    fetchSpots();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: '90vh', width: '100%' }}>\r\n      <MapContainer center={[28.6448, 77.216721]} zoom={13} style={{ height: '100%', width: '100%' }}>\r\n        <TileLayer\r\n          attribution='&copy; OpenStreetMap contributors'\r\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n        />\r\n        {parkingSpots.map((spot) => (\r\n          <Marker key={spot._id} position={[spot.latitude, spot.longitude]}>\r\n            <Popup>\r\n              {spot.name} - {spot.city}\r\n              <br />\r\n              Slots: {spot.availableSlots}/{spot.totalSlots}\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QAC9DH,eAAe,CAACE,GAAG,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;MACrD;IACF,CAAC;IACDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC5Cf,OAAA,CAACN,YAAY;MAACsB,MAAM,EAAE,CAAC,OAAO,EAAE,SAAS,CAAE;MAACC,IAAI,EAAE,EAAG;MAACL,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC7Ff,OAAA,CAACL,SAAS;QACRuB,WAAW,EAAC,iCAAmC;QAC/CC,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,EACDpB,YAAY,CAACqB,GAAG,CAAEC,IAAI,iBACrBzB,OAAA,CAACJ,MAAM;QAAgB8B,QAAQ,EAAE,CAACD,IAAI,CAACE,QAAQ,EAAEF,IAAI,CAACG,SAAS,CAAE;QAAAb,QAAA,eAC/Df,OAAA,CAACH,KAAK;UAAAkB,QAAA,GACHU,IAAI,CAACI,IAAI,EAAC,KAAG,EAACJ,IAAI,CAACK,IAAI,eACxB9B,OAAA;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,WACC,EAACE,IAAI,CAACM,cAAc,EAAC,GAAC,EAACN,IAAI,CAACO,UAAU;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC,GALGE,IAAI,CAACQ,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACrB,EAAA,CAlCQD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}